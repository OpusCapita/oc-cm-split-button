var _templateObject = _taggedTemplateLiteralLoose(['\n  background: ', ';\n  display: flex;\n  flex-direction: row;\n'], ['\n  background: ', ';\n  display: flex;\n  flex-direction: row;\n']),
    _templateObject2 = _taggedTemplateLiteralLoose(['\n  background: ', ';\n  opacity: ', ';\n  height: 34px;\n  width: 33px;\n  &&& {\n    margin-left: 0.1rem;\n  }\n'], ['\n  background: ', ';\n  opacity: ', ';\n  height: 34px;\n  width: 33px;\n  &&& {\n    margin-left: 0.1rem;\n  }\n']);

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

import React from 'react';
import PropTypes from 'prop-types';
import styled, { ThemeProvider } from 'styled-components';
import { DropdownMenu } from '@opuscapita/react-dropdown';
import { Primitive, theme } from '@opuscapita/oc-cm-common-layouts';
import Icon from './icon.component';
import './main.scss';

var Wrapper = styled.section(_templateObject, function (props) {
  return props.theme.contentBackgroundColor;
});

var DropdownMenuButton = styled(DropdownMenu)(_templateObject2, function (props) {
  return props.primary ? props.theme.formControls.button.primaryBackgroundColor : props.theme.formControls.button.backgroundColor;
}, function (props) {
  return props.disabled ? 0.65 : 1;
});

var menuIcon = React.createElement(Icon, {
  faIcon: 'fa fa-angle-down',
  color: 'white',
  size: '2rem',
  padding: '0',
  margin: '5px 10px 0px 10px'
});

var SplitButton = function SplitButton(_ref) {
  var id = _ref.id,
      title = _ref.title,
      disabled = _ref.disabled,
      menuDisabled = _ref.menuDisabled,
      menuItems = _ref.menuItems,
      onButtonClick = _ref.onButtonClick,
      icon = _ref.icon,
      primary = _ref.primary;
  return React.createElement(
    ThemeProvider,
    { theme: theme },
    React.createElement(
      Wrapper,
      { id: id },
      React.createElement(
        Primitive.Button,
        { disabled: disabled, primary: primary, onClick: onButtonClick },
        icon,
        title
      ),
      React.createElement(DropdownMenuButton, {
        id: id + '-dropdown',
        title: menuIcon,
        disabled: menuDisabled,
        primary: primary ? 1 : 0,
        menuItems: menuItems
      })
    )
  );
};

SplitButton.defaultProps = {
  disabled: false,
  icon: null,
  menuDisabled: false,
  onButtonClick: function onButtonClick() {},
  primary: false
};

export default SplitButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zcGxpdGJ1dHRvbi5jb21wb25lbnQuanN4Il0sIm5hbWVzIjpbIlJlYWN0IiwiUHJvcFR5cGVzIiwic3R5bGVkIiwiVGhlbWVQcm92aWRlciIsIkRyb3Bkb3duTWVudSIsIlByaW1pdGl2ZSIsInRoZW1lIiwiSWNvbiIsIldyYXBwZXIiLCJzZWN0aW9uIiwicHJvcHMiLCJjb250ZW50QmFja2dyb3VuZENvbG9yIiwiRHJvcGRvd25NZW51QnV0dG9uIiwicHJpbWFyeSIsImZvcm1Db250cm9scyIsImJ1dHRvbiIsInByaW1hcnlCYWNrZ3JvdW5kQ29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJkaXNhYmxlZCIsIm1lbnVJY29uIiwiU3BsaXRCdXR0b24iLCJpZCIsInRpdGxlIiwibWVudURpc2FibGVkIiwibWVudUl0ZW1zIiwib25CdXR0b25DbGljayIsImljb24iLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBT0EsS0FBUCxNQUFrQixPQUFsQjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxNQUFQLElBQWlCQyxhQUFqQixRQUFzQyxtQkFBdEM7QUFDQSxTQUFTQyxZQUFULFFBQTZCLDRCQUE3QjtBQUNBLFNBQVNDLFNBQVQsRUFBb0JDLEtBQXBCLFFBQWlDLGtDQUFqQztBQUNBLE9BQU9DLElBQVAsTUFBaUIsa0JBQWpCO0FBQ0EsT0FBTyxhQUFQOztBQUVBLElBQU1DLFVBQVVOLE9BQU9PLE9BQWpCLGtCQUNVO0FBQUEsU0FBU0MsTUFBTUosS0FBTixDQUFZSyxzQkFBckI7QUFBQSxDQURWLENBQU47O0FBTUEsSUFBTUMscUJBQXFCVixPQUFPRSxZQUFQLENBQXJCLG1CQUNVO0FBQUEsU0FBVU0sTUFBTUcsT0FBTixHQUN0QkgsTUFBTUosS0FBTixDQUFZUSxZQUFaLENBQXlCQyxNQUF6QixDQUFnQ0Msc0JBRFYsR0FFdEJOLE1BQU1KLEtBQU4sQ0FBWVEsWUFBWixDQUF5QkMsTUFBekIsQ0FBZ0NFLGVBRnBCO0FBQUEsQ0FEVixFQUlPO0FBQUEsU0FBVVAsTUFBTVEsUUFBTixHQUFpQixJQUFqQixHQUF3QixDQUFsQztBQUFBLENBSlAsQ0FBTjs7QUFZQSxJQUFNQyxXQUNKLG9CQUFDLElBQUQ7QUFDRSxVQUFPLGtCQURUO0FBRUUsU0FBTSxPQUZSO0FBR0UsUUFBSyxNQUhQO0FBSUUsV0FBUSxHQUpWO0FBS0UsVUFBTztBQUxULEVBREY7O0FBVUEsSUFBTUMsY0FBYyxTQUFkQSxXQUFjO0FBQUEsTUFDbEJDLEVBRGtCLFFBQ2xCQSxFQURrQjtBQUFBLE1BRWxCQyxLQUZrQixRQUVsQkEsS0FGa0I7QUFBQSxNQUdsQkosUUFIa0IsUUFHbEJBLFFBSGtCO0FBQUEsTUFJbEJLLFlBSmtCLFFBSWxCQSxZQUprQjtBQUFBLE1BS2xCQyxTQUxrQixRQUtsQkEsU0FMa0I7QUFBQSxNQU1sQkMsYUFOa0IsUUFNbEJBLGFBTmtCO0FBQUEsTUFPbEJDLElBUGtCLFFBT2xCQSxJQVBrQjtBQUFBLE1BUWxCYixPQVJrQixRQVFsQkEsT0FSa0I7QUFBQSxTQVVsQjtBQUFDLGlCQUFEO0FBQUEsTUFBZSxPQUFPUCxLQUF0QjtBQUNFO0FBQUMsYUFBRDtBQUFBLFFBQVMsSUFBSWUsRUFBYjtBQUNFO0FBQUMsaUJBQUQsQ0FBVyxNQUFYO0FBQUEsVUFBa0IsVUFBVUgsUUFBNUIsRUFBc0MsU0FBU0wsT0FBL0MsRUFBd0QsU0FBU1ksYUFBakU7QUFDR0MsWUFESDtBQUVHSjtBQUZILE9BREY7QUFLRSwwQkFBQyxrQkFBRDtBQUNFLFlBQU9ELEVBQVAsY0FERjtBQUVFLGVBQU9GLFFBRlQ7QUFHRSxrQkFBVUksWUFIWjtBQUlFLGlCQUFTVixVQUFVLENBQVYsR0FBYyxDQUp6QjtBQUtFLG1CQUFXVztBQUxiO0FBTEY7QUFERixHQVZrQjtBQUFBLENBQXBCOztBQW1EQUosWUFBWU8sWUFBWixHQUEyQjtBQUN6QlQsWUFBVSxLQURlO0FBRXpCUSxRQUFNLElBRm1CO0FBR3pCSCxnQkFBYyxLQUhXO0FBSXpCRSxpQkFBZSx5QkFBTSxDQUFFLENBSkU7QUFLekJaLFdBQVM7QUFMZ0IsQ0FBM0I7O0FBUUEsZUFBZU8sV0FBZiIsImZpbGUiOiJzcGxpdGJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgc3R5bGVkLCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IERyb3Bkb3duTWVudSB9IGZyb20gJ0BvcHVzY2FwaXRhL3JlYWN0LWRyb3Bkb3duJztcclxuaW1wb3J0IHsgUHJpbWl0aXZlLCB0aGVtZSB9IGZyb20gJ0BvcHVzY2FwaXRhL29jLWNtLWNvbW1vbi1sYXlvdXRzJztcclxuaW1wb3J0IEljb24gZnJvbSAnLi9pY29uLmNvbXBvbmVudCc7XHJcbmltcG9ydCAnLi9tYWluLnNjc3MnO1xyXG5cclxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5zZWN0aW9uYFxyXG4gIGJhY2tncm91bmQ6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuY29udGVudEJhY2tncm91bmRDb2xvcn07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5gO1xyXG5cclxuY29uc3QgRHJvcGRvd25NZW51QnV0dG9uID0gc3R5bGVkKERyb3Bkb3duTWVudSlgXHJcbiAgYmFja2dyb3VuZDogJHtwcm9wcyA9PiAocHJvcHMucHJpbWFyeSA/XHJcbiAgICBwcm9wcy50aGVtZS5mb3JtQ29udHJvbHMuYnV0dG9uLnByaW1hcnlCYWNrZ3JvdW5kQ29sb3IgOlxyXG4gICAgcHJvcHMudGhlbWUuZm9ybUNvbnRyb2xzLmJ1dHRvbi5iYWNrZ3JvdW5kQ29sb3IpfTtcclxuICBvcGFjaXR5OiAke3Byb3BzID0+IChwcm9wcy5kaXNhYmxlZCA/IDAuNjUgOiAxKX07XHJcbiAgaGVpZ2h0OiAzNHB4O1xyXG4gIHdpZHRoOiAzM3B4O1xyXG4gICYmJiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMC4xcmVtO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IG1lbnVJY29uID0gKFxyXG4gIDxJY29uXHJcbiAgICBmYUljb249XCJmYSBmYS1hbmdsZS1kb3duXCJcclxuICAgIGNvbG9yPVwid2hpdGVcIlxyXG4gICAgc2l6ZT1cIjJyZW1cIlxyXG4gICAgcGFkZGluZz1cIjBcIlxyXG4gICAgbWFyZ2luPVwiNXB4IDEwcHggMHB4IDEwcHhcIlxyXG4gIC8+XHJcbik7XHJcblxyXG5jb25zdCBTcGxpdEJ1dHRvbiA9ICh7XHJcbiAgaWQsXHJcbiAgdGl0bGUsXHJcbiAgZGlzYWJsZWQsXHJcbiAgbWVudURpc2FibGVkLFxyXG4gIG1lbnVJdGVtcyxcclxuICBvbkJ1dHRvbkNsaWNrLFxyXG4gIGljb24sXHJcbiAgcHJpbWFyeSxcclxufSkgPT4gKFxyXG4gIDxUaGVtZVByb3ZpZGVyIHRoZW1lPXt0aGVtZX0+XHJcbiAgICA8V3JhcHBlciBpZD17aWR9PlxyXG4gICAgICA8UHJpbWl0aXZlLkJ1dHRvbiBkaXNhYmxlZD17ZGlzYWJsZWR9IHByaW1hcnk9e3ByaW1hcnl9IG9uQ2xpY2s9e29uQnV0dG9uQ2xpY2t9PlxyXG4gICAgICAgIHtpY29ufVxyXG4gICAgICAgIHt0aXRsZX1cclxuICAgICAgPC9QcmltaXRpdmUuQnV0dG9uPlxyXG4gICAgICA8RHJvcGRvd25NZW51QnV0dG9uXHJcbiAgICAgICAgaWQ9e2Ake2lkfS1kcm9wZG93bmB9XHJcbiAgICAgICAgdGl0bGU9e21lbnVJY29ufVxyXG4gICAgICAgIGRpc2FibGVkPXttZW51RGlzYWJsZWR9XHJcbiAgICAgICAgcHJpbWFyeT17cHJpbWFyeSA/IDEgOiAwfVxyXG4gICAgICAgIG1lbnVJdGVtcz17bWVudUl0ZW1zfVxyXG4gICAgICAvPlxyXG4gICAgPC9XcmFwcGVyPlxyXG4gIDwvVGhlbWVQcm92aWRlcj5cclxuKTtcclxuXHJcblNwbGl0QnV0dG9uLnByb3BUeXBlcyA9IHtcclxuICBpZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxyXG4gIG1lbnVJdGVtczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnNoYXBlKHtcclxuICAgIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIGRpc2FibGVDbG9zaW5nOiBQcm9wVHlwZXMuYm9vbCxcclxuICAgIGhyZWY6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgICBpY29uOiBQcm9wVHlwZXMuZWxlbWVudCxcclxuICAgIGlkOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXHJcbiAgICBvbkNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcclxuICAgIHRpdGxlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcclxuICAgICAgUHJvcFR5cGVzLm51bWJlcixcclxuICAgICAgUHJvcFR5cGVzLnN0cmluZyxcclxuICAgICAgUHJvcFR5cGVzLmVsZW1lbnQsXHJcbiAgICBdKSxcclxuICAgIHR5cGU6IFByb3BUeXBlcy5vbmVPZihbJ2l0ZW0nLCAnZGl2aWRlciddKSxcclxuICB9KSkuaXNSZXF1aXJlZCxcclxuICB0aXRsZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbKFByb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5ub2RlKV0pLmlzUmVxdWlyZWQsXHJcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxyXG4gIGljb246IFByb3BUeXBlcy5ub2RlLFxyXG4gIG1lbnVEaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXHJcbiAgb25CdXR0b25DbGljazogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgcHJpbWFyeTogUHJvcFR5cGVzLmJvb2wsXHJcbn07XHJcblxyXG5TcGxpdEJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgZGlzYWJsZWQ6IGZhbHNlLFxyXG4gIGljb246IG51bGwsXHJcbiAgbWVudURpc2FibGVkOiBmYWxzZSxcclxuICBvbkJ1dHRvbkNsaWNrOiAoKSA9PiB7fSxcclxuICBwcmltYXJ5OiBmYWxzZSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNwbGl0QnV0dG9uO1xyXG4iXX0=